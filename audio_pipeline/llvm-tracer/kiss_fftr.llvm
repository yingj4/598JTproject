; ModuleID = 'libspatialaudio/source/kiss_fft/kiss_fftr.c'
source_filename = "libspatialaudio/source/kiss_fft/kiss_fftr.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.kiss_fftr_state = type { %struct.kiss_fft_state*, %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx* }
%struct.kiss_fft_state = type { i32, i32, [64 x i32], [1 x %struct.kiss_fft_cpx] }
%struct.kiss_fft_cpx = type { float, float }

@stderr = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [37 x i8] c"Real FFT optimization must be even.\0A\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"kiss fft usage error: improper alloc\0A\00", align 1

; Function Attrs: noinline nounwind uwtable
define %struct.kiss_fftr_state* @kiss_fftr_alloc(i32, i32, i8*, i64*) local_unnamed_addr #0 !dbg !46 {
  %5 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !54, metadata !DIExpression()), !dbg !66
  call void @llvm.dbg.value(metadata i32 %1, metadata !55, metadata !DIExpression()), !dbg !67
  call void @llvm.dbg.value(metadata i8* %2, metadata !56, metadata !DIExpression()), !dbg !68
  call void @llvm.dbg.value(metadata i64* %3, metadata !57, metadata !DIExpression()), !dbg !69
  call void @llvm.dbg.value(metadata %struct.kiss_fftr_state* null, metadata !59, metadata !DIExpression()), !dbg !70
  %6 = bitcast i64* %5 to i8*, !dbg !71
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6, !dbg !71
  %7 = and i32 %0, 1, !dbg !72
  %8 = icmp eq i32 %7, 0, !dbg !72
  br i1 %8, label %12, label %9, !dbg !74

; <label>:9:                                      ; preds = %4
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !75, !tbaa !77
  %11 = tail call i64 @fwrite(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0), i64 36, i64 1, %struct._IO_FILE* %10) #7, !dbg !81
  br label %71, !dbg !82

; <label>:12:                                     ; preds = %4
  %13 = ashr i32 %0, 1, !dbg !83
  call void @llvm.dbg.value(metadata i32 %13, metadata !54, metadata !DIExpression()), !dbg !66
  call void @llvm.dbg.value(metadata i64* %5, metadata !60, metadata !DIExpression()), !dbg !84
  %14 = call %struct.kiss_fft_state* @kiss_fft_alloc(i32 %13, i32 %1, i8* null, i64* nonnull %5) #6, !dbg !85
  %15 = load i64, i64* %5, align 8, !dbg !86, !tbaa !87
  call void @llvm.dbg.value(metadata i64 %15, metadata !60, metadata !DIExpression()), !dbg !84
  %16 = mul nsw i32 %13, 3, !dbg !89
  %17 = sdiv i32 %16, 2, !dbg !90
  %18 = sext i32 %17 to i64, !dbg !91
  %19 = shl nsw i64 %18, 3, !dbg !92
  %20 = add nsw i64 %19, 24, !dbg !93
  %21 = add i64 %20, %15, !dbg !94
  call void @llvm.dbg.value(metadata i64 %21, metadata !61, metadata !DIExpression()), !dbg !95
  %22 = icmp eq i64* %3, null, !dbg !96
  br i1 %22, label %23, label %25, !dbg !98

; <label>:23:                                     ; preds = %12
  %24 = call noalias i8* @malloc(i64 %21) #6, !dbg !99
  call void @llvm.dbg.value(metadata i8* %24, metadata !59, metadata !DIExpression()), !dbg !70
  br label %28, !dbg !101

; <label>:25:                                     ; preds = %12
  %26 = load i64, i64* %3, align 8, !dbg !102, !tbaa !87
  %27 = icmp ult i64 %26, %21, !dbg !105
  store i64 %21, i64* %3, align 8, !dbg !106, !tbaa !87
  br i1 %27, label %71, label %28

; <label>:28:                                     ; preds = %25, %23
  %29 = phi i8* [ %24, %23 ], [ %2, %25 ]
  %30 = bitcast i8* %29 to %struct.kiss_fftr_state*
  call void @llvm.dbg.value(metadata %struct.kiss_fftr_state* %30, metadata !59, metadata !DIExpression()), !dbg !70
  %31 = icmp eq i8* %29, null, !dbg !107
  br i1 %31, label %71, label %32, !dbg !109

; <label>:32:                                     ; preds = %28
  %33 = getelementptr inbounds i8, i8* %29, i64 24, !dbg !110
  %34 = bitcast i8* %29 to i8**, !dbg !111
  store i8* %33, i8** %34, align 8, !dbg !111, !tbaa !112
  call void @llvm.dbg.value(metadata i64 %15, metadata !60, metadata !DIExpression()), !dbg !84
  %35 = getelementptr inbounds i8, i8* %33, i64 %15, !dbg !114
  %36 = bitcast i8* %35 to %struct.kiss_fft_cpx*, !dbg !115
  %37 = getelementptr inbounds i8, i8* %29, i64 8, !dbg !116
  %38 = bitcast i8* %37 to i8**, !dbg !117
  store i8* %35, i8** %38, align 8, !dbg !117, !tbaa !118
  %39 = sext i32 %13 to i64, !dbg !119
  %40 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %36, i64 %39, !dbg !119
  %41 = getelementptr inbounds i8, i8* %29, i64 16, !dbg !120
  %42 = bitcast i8* %41 to %struct.kiss_fft_cpx**, !dbg !120
  store %struct.kiss_fft_cpx* %40, %struct.kiss_fft_cpx** %42, align 8, !dbg !121, !tbaa !122
  %43 = bitcast i8* %29 to i8**, !dbg !123
  %44 = load i8*, i8** %43, align 8, !dbg !123, !tbaa !112
  call void @llvm.dbg.value(metadata i64* %5, metadata !60, metadata !DIExpression()), !dbg !84
  %45 = call %struct.kiss_fft_state* @kiss_fft_alloc(i32 %13, i32 %1, i8* %44, i64* nonnull %5) #6, !dbg !124
  call void @llvm.dbg.value(metadata i32 0, metadata !58, metadata !DIExpression()), !dbg !125
  %46 = icmp sgt i32 %0, 3, !dbg !126
  br i1 %46, label %47, label %71, !dbg !127

; <label>:47:                                     ; preds = %32
  %48 = sdiv i32 %13, 2, !dbg !128
  %49 = sitofp i32 %13 to double
  %50 = icmp eq i32 %1, 0
  %51 = sext i32 %48 to i64, !dbg !127
  br label %52, !dbg !127

; <label>:52:                                     ; preds = %47, %52
  %53 = phi i64 [ 0, %47 ], [ %54, %52 ]
  call void @llvm.dbg.value(metadata i64 %53, metadata !58, metadata !DIExpression()), !dbg !125
  %54 = add nuw nsw i64 %53, 1, !dbg !129
  %55 = trunc i64 %54 to i32, !dbg !130
  %56 = sitofp i32 %55 to double, !dbg !130
  %57 = fdiv double %56, %49, !dbg !131
  %58 = fadd double %57, 5.000000e-01, !dbg !132
  %59 = fmul double %58, 0xC00921FB54442D18, !dbg !133
  call void @llvm.dbg.value(metadata double %59, metadata !62, metadata !DIExpression()), !dbg !134
  %60 = fsub double -0.000000e+00, %59, !dbg !135
  %61 = select i1 %50, double %59, double %60, !dbg !137
  call void @llvm.dbg.value(metadata double %61, metadata !62, metadata !DIExpression()), !dbg !134
  %62 = call double @cos(double %61) #6, !dbg !138
  %63 = fptrunc double %62 to float, !dbg !138
  %64 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %42, align 8, !dbg !138, !tbaa !122
  %65 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %64, i64 %53, i32 0, !dbg !138
  store float %63, float* %65, align 4, !dbg !138, !tbaa !140
  %66 = call double @sin(double %61) #6, !dbg !138
  %67 = fptrunc double %66 to float, !dbg !138
  %68 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %42, align 8, !dbg !138, !tbaa !122
  %69 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %68, i64 %53, i32 1, !dbg !138
  store float %67, float* %69, align 4, !dbg !138, !tbaa !143
  %70 = icmp slt i64 %54, %51, !dbg !126
  br i1 %70, label %52, label %71, !dbg !127, !llvm.loop !144

; <label>:71:                                     ; preds = %52, %32, %25, %28, %9
  %72 = phi %struct.kiss_fftr_state* [ null, %9 ], [ null, %28 ], [ null, %25 ], [ %30, %32 ], [ %30, %52 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6, !dbg !146
  ret %struct.kiss_fftr_state* %72, !dbg !146
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #1

declare %struct.kiss_fft_state* @kiss_fft_alloc(i32, i32, i8*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare double @cos(double) local_unnamed_addr #3

; Function Attrs: nounwind
declare double @sin(double) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #1

; Function Attrs: noinline nounwind uwtable
define void @kiss_fftr(%struct.kiss_fftr_state* nocapture readonly, float*, %struct.kiss_fft_cpx* nocapture) local_unnamed_addr #0 !dbg !147 {
  call void @llvm.dbg.value(metadata %struct.kiss_fftr_state* %0, metadata !153, metadata !DIExpression()), !dbg !164
  call void @llvm.dbg.value(metadata float* %1, metadata !154, metadata !DIExpression()), !dbg !165
  call void @llvm.dbg.value(metadata %struct.kiss_fft_cpx* %2, metadata !155, metadata !DIExpression()), !dbg !166
  %4 = getelementptr inbounds %struct.kiss_fftr_state, %struct.kiss_fftr_state* %0, i64 0, i32 0, !dbg !167
  %5 = load %struct.kiss_fft_state*, %struct.kiss_fft_state** %4, align 8, !dbg !167, !tbaa !112
  %6 = getelementptr inbounds %struct.kiss_fft_state, %struct.kiss_fft_state* %5, i64 0, i32 1, !dbg !169
  %7 = load i32, i32* %6, align 4, !dbg !169, !tbaa !170
  %8 = icmp eq i32 %7, 0, !dbg !173
  br i1 %8, label %12, label %9, !dbg !174

; <label>:9:                                      ; preds = %3
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !175, !tbaa !77
  %11 = tail call i64 @fwrite(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i64 37, i64 1, %struct._IO_FILE* %10) #7, !dbg !177
  tail call void @exit(i32 1) #8, !dbg !178
  unreachable, !dbg !178

; <label>:12:                                     ; preds = %3
  %13 = getelementptr inbounds %struct.kiss_fft_state, %struct.kiss_fft_state* %5, i64 0, i32 0, !dbg !179
  %14 = load i32, i32* %13, align 4, !dbg !179, !tbaa !180
  call void @llvm.dbg.value(metadata i32 %14, metadata !157, metadata !DIExpression()), !dbg !181
  %15 = bitcast float* %1 to %struct.kiss_fft_cpx*, !dbg !182
  %16 = getelementptr inbounds %struct.kiss_fftr_state, %struct.kiss_fftr_state* %0, i64 0, i32 1, !dbg !183
  %17 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %16, align 8, !dbg !183, !tbaa !118
  tail call void @kiss_fft(%struct.kiss_fft_state* %5, %struct.kiss_fft_cpx* %15, %struct.kiss_fft_cpx* %17) #6, !dbg !184
  %18 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %16, align 8, !dbg !185, !tbaa !118
  %19 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %18, i64 0, i32 0, !dbg !186
  %20 = load float, float* %19, align 4, !dbg !186, !tbaa !140
  call void @llvm.dbg.value(metadata float %20, metadata !163, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !187
  %21 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %18, i64 0, i32 1, !dbg !188
  %22 = load float, float* %21, align 4, !dbg !188, !tbaa !143
  call void @llvm.dbg.value(metadata float %22, metadata !163, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !187
  %23 = fadd float %20, %22, !dbg !189
  %24 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %2, i64 0, i32 0, !dbg !190
  store float %23, float* %24, align 4, !dbg !191, !tbaa !140
  %25 = fsub float %20, %22, !dbg !192
  %26 = sext i32 %14 to i64, !dbg !193
  %27 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %2, i64 %26, i32 0, !dbg !194
  store float %25, float* %27, align 4, !dbg !195, !tbaa !140
  %28 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %2, i64 0, i32 1, !dbg !196
  store float 0.000000e+00, float* %28, align 4, !dbg !197, !tbaa !143
  %29 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %2, i64 %26, i32 1, !dbg !198
  store float 0.000000e+00, float* %29, align 4, !dbg !199, !tbaa !143
  call void @llvm.dbg.value(metadata i32 1, metadata !156, metadata !DIExpression()), !dbg !200
  %30 = icmp slt i32 %14, 2, !dbg !201
  br i1 %30, label %78, label %31, !dbg !204

; <label>:31:                                     ; preds = %12
  %32 = lshr i32 %14, 1
  %33 = getelementptr inbounds %struct.kiss_fftr_state, %struct.kiss_fftr_state* %0, i64 0, i32 2
  %34 = sext i32 %14 to i64, !dbg !204
  %35 = add nuw nsw i32 %32, 1, !dbg !204
  %36 = zext i32 %35 to i64
  br label %37, !dbg !204

; <label>:37:                                     ; preds = %37, %31
  %38 = phi i64 [ %76, %37 ], [ 1, %31 ]
  call void @llvm.dbg.value(metadata i64 %38, metadata !156, metadata !DIExpression()), !dbg !200
  %39 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %18, i64 %38, i32 0, !dbg !205
  %40 = load float, float* %39, align 4, !dbg !205
  call void @llvm.dbg.value(metadata float %40, metadata !159, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !207
  %41 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %18, i64 %38, i32 1, !dbg !205
  %42 = load float, float* %41, align 4, !dbg !205
  call void @llvm.dbg.value(metadata float %42, metadata !159, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !207
  %43 = sub nsw i64 %34, %38, !dbg !208
  %44 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %18, i64 %43, i32 0, !dbg !209
  %45 = load float, float* %44, align 4, !dbg !209, !tbaa !140
  call void @llvm.dbg.value(metadata float %45, metadata !158, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !210
  %46 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %18, i64 %43, i32 1, !dbg !211
  %47 = load float, float* %46, align 4, !dbg !211, !tbaa !143
  %48 = fadd float %40, %45, !dbg !212
  call void @llvm.dbg.value(metadata float %48, metadata !160, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !214
  %49 = fsub float %42, %47, !dbg !212
  call void @llvm.dbg.value(metadata float %49, metadata !160, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !214
  %50 = fsub float %40, %45, !dbg !215
  call void @llvm.dbg.value(metadata float %50, metadata !161, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !217
  %51 = fadd float %42, %47, !dbg !215
  call void @llvm.dbg.value(metadata float %51, metadata !161, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !217
  %52 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %33, align 8, !dbg !218, !tbaa !122
  %53 = add nsw i64 %38, -1, !dbg !218
  %54 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %52, i64 %53, i32 0, !dbg !218
  %55 = load float, float* %54, align 4, !dbg !218, !tbaa !140
  %56 = fmul float %50, %55, !dbg !218
  %57 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %52, i64 %53, i32 1, !dbg !218
  %58 = load float, float* %57, align 4, !dbg !218, !tbaa !143
  %59 = fmul float %51, %58, !dbg !218
  %60 = fsub float %56, %59, !dbg !218
  call void @llvm.dbg.value(metadata float %60, metadata !162, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !220
  %61 = fmul float %50, %58, !dbg !218
  %62 = fmul float %51, %55, !dbg !218
  %63 = fadd float %62, %61, !dbg !218
  call void @llvm.dbg.value(metadata float %63, metadata !162, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !220
  %64 = fadd float %48, %60, !dbg !221
  %65 = fmul float %64, 5.000000e-01, !dbg !221
  %66 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %2, i64 %38, i32 0, !dbg !222
  store float %65, float* %66, align 4, !dbg !223, !tbaa !140
  %67 = fadd float %49, %63, !dbg !224
  %68 = fmul float %67, 5.000000e-01, !dbg !224
  %69 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %2, i64 %38, i32 1, !dbg !225
  store float %68, float* %69, align 4, !dbg !226, !tbaa !143
  %70 = fsub float %48, %60, !dbg !227
  %71 = fmul float %70, 5.000000e-01, !dbg !227
  %72 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %2, i64 %43, i32 0, !dbg !228
  store float %71, float* %72, align 4, !dbg !229, !tbaa !140
  %73 = fsub float %63, %49, !dbg !230
  %74 = fmul float %73, 5.000000e-01, !dbg !230
  %75 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %2, i64 %43, i32 1, !dbg !231
  store float %74, float* %75, align 4, !dbg !232, !tbaa !143
  %76 = add nuw nsw i64 %38, 1, !dbg !233
  %77 = icmp eq i64 %76, %36, !dbg !201
  br i1 %77, label %78, label %37, !dbg !204, !llvm.loop !234

; <label>:78:                                     ; preds = %37, %12
  ret void, !dbg !236
}

; Function Attrs: noreturn nounwind
declare void @exit(i32) local_unnamed_addr #4

declare void @kiss_fft(%struct.kiss_fft_state*, %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx*) local_unnamed_addr #2

; Function Attrs: noinline nounwind uwtable
define void @kiss_fftri(%struct.kiss_fftr_state* nocapture readonly, %struct.kiss_fft_cpx* nocapture readonly, float*) local_unnamed_addr #0 !dbg !237 {
  call void @llvm.dbg.value(metadata %struct.kiss_fftr_state* %0, metadata !242, metadata !DIExpression()), !dbg !255
  call void @llvm.dbg.value(metadata %struct.kiss_fft_cpx* %1, metadata !243, metadata !DIExpression()), !dbg !256
  call void @llvm.dbg.value(metadata float* %2, metadata !244, metadata !DIExpression()), !dbg !257
  %4 = getelementptr inbounds %struct.kiss_fftr_state, %struct.kiss_fftr_state* %0, i64 0, i32 0, !dbg !258
  %5 = load %struct.kiss_fft_state*, %struct.kiss_fft_state** %4, align 8, !dbg !258, !tbaa !112
  %6 = getelementptr inbounds %struct.kiss_fft_state, %struct.kiss_fft_state* %5, i64 0, i32 1, !dbg !260
  %7 = load i32, i32* %6, align 4, !dbg !260, !tbaa !170
  %8 = icmp eq i32 %7, 0, !dbg !261
  br i1 %8, label %9, label %12, !dbg !262

; <label>:9:                                      ; preds = %3
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !263, !tbaa !77
  %11 = tail call i64 @fwrite(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i64 37, i64 1, %struct._IO_FILE* %10) #7, !dbg !265
  tail call void @exit(i32 1) #8, !dbg !266
  unreachable, !dbg !266

; <label>:12:                                     ; preds = %3
  %13 = getelementptr inbounds %struct.kiss_fft_state, %struct.kiss_fft_state* %5, i64 0, i32 0, !dbg !267
  %14 = load i32, i32* %13, align 4, !dbg !267, !tbaa !180
  call void @llvm.dbg.value(metadata i32 %14, metadata !246, metadata !DIExpression()), !dbg !268
  %15 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %1, i64 0, i32 0, !dbg !269
  %16 = load float, float* %15, align 4, !dbg !269, !tbaa !140
  %17 = sext i32 %14 to i64, !dbg !270
  %18 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %1, i64 %17, i32 0, !dbg !271
  %19 = load float, float* %18, align 4, !dbg !271, !tbaa !140
  %20 = fadd float %16, %19, !dbg !272
  %21 = getelementptr inbounds %struct.kiss_fftr_state, %struct.kiss_fftr_state* %0, i64 0, i32 1, !dbg !273
  %22 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %21, align 8, !dbg !273, !tbaa !118
  %23 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %22, i64 0, i32 0, !dbg !274
  store float %20, float* %23, align 4, !dbg !275, !tbaa !140
  %24 = load float, float* %15, align 4, !dbg !276, !tbaa !140
  %25 = load float, float* %18, align 4, !dbg !277, !tbaa !140
  %26 = fsub float %24, %25, !dbg !278
  %27 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %22, i64 0, i32 1, !dbg !279
  store float %26, float* %27, align 4, !dbg !280, !tbaa !143
  call void @llvm.dbg.value(metadata i32 1, metadata !245, metadata !DIExpression()), !dbg !281
  %28 = icmp slt i32 %14, 2, !dbg !282
  br i1 %28, label %73, label %29, !dbg !283

; <label>:29:                                     ; preds = %12
  %30 = lshr i32 %14, 1
  %31 = getelementptr inbounds %struct.kiss_fftr_state, %struct.kiss_fftr_state* %0, i64 0, i32 2
  %32 = sext i32 %14 to i64, !dbg !283
  %33 = add nuw nsw i32 %30, 1, !dbg !283
  %34 = zext i32 %33 to i64
  br label %35, !dbg !283

; <label>:35:                                     ; preds = %35, %29
  %36 = phi i64 [ %71, %35 ], [ 1, %29 ]
  call void @llvm.dbg.value(metadata i64 %36, metadata !245, metadata !DIExpression()), !dbg !281
  %37 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %1, i64 %36, i32 0, !dbg !284
  %38 = load float, float* %37, align 4, !dbg !284
  call void @llvm.dbg.value(metadata float %38, metadata !247, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !285
  %39 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %1, i64 %36, i32 1, !dbg !284
  %40 = load float, float* %39, align 4, !dbg !284
  call void @llvm.dbg.value(metadata float %40, metadata !247, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !285
  %41 = sub nsw i64 %32, %36, !dbg !286
  %42 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %1, i64 %41, i32 0, !dbg !287
  %43 = load float, float* %42, align 4, !dbg !287, !tbaa !140
  call void @llvm.dbg.value(metadata float %43, metadata !251, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !288
  %44 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %1, i64 %41, i32 1, !dbg !289
  %45 = load float, float* %44, align 4, !dbg !289, !tbaa !143
  %46 = fadd float %38, %43, !dbg !290
  call void @llvm.dbg.value(metadata float %46, metadata !252, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !292
  %47 = fsub float %40, %45, !dbg !290
  call void @llvm.dbg.value(metadata float %47, metadata !252, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !292
  %48 = fsub float %38, %43, !dbg !293
  call void @llvm.dbg.value(metadata float %48, metadata !254, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !295
  %49 = fadd float %40, %45, !dbg !293
  call void @llvm.dbg.value(metadata float %49, metadata !254, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !295
  %50 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %31, align 8, !dbg !296, !tbaa !122
  %51 = add nsw i64 %36, -1, !dbg !296
  %52 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %50, i64 %51, i32 0, !dbg !296
  %53 = load float, float* %52, align 4, !dbg !296, !tbaa !140
  %54 = fmul float %48, %53, !dbg !296
  %55 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %50, i64 %51, i32 1, !dbg !296
  %56 = load float, float* %55, align 4, !dbg !296, !tbaa !143
  %57 = fmul float %49, %56, !dbg !296
  %58 = fsub float %54, %57, !dbg !296
  call void @llvm.dbg.value(metadata float %58, metadata !253, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !298
  %59 = fmul float %48, %56, !dbg !296
  %60 = fmul float %49, %53, !dbg !296
  %61 = fadd float %60, %59, !dbg !296
  call void @llvm.dbg.value(metadata float %61, metadata !253, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !298
  %62 = fadd float %46, %58, !dbg !299
  %63 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %22, i64 %36, i32 0, !dbg !299
  store float %62, float* %63, align 4, !dbg !299, !tbaa !140
  %64 = fadd float %47, %61, !dbg !299
  %65 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %22, i64 %36, i32 1, !dbg !299
  store float %64, float* %65, align 4, !dbg !299, !tbaa !143
  %66 = fsub float %46, %58, !dbg !301
  %67 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %22, i64 %41, i32 0, !dbg !301
  store float %66, float* %67, align 4, !dbg !301, !tbaa !140
  %68 = fsub float %47, %61, !dbg !301
  %69 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %22, i64 %41, i32 1, !dbg !301
  %70 = fsub float -0.000000e+00, %68, !dbg !303
  store float %70, float* %69, align 4, !dbg !303, !tbaa !143
  %71 = add nuw nsw i64 %36, 1, !dbg !304
  %72 = icmp eq i64 %71, %34, !dbg !282
  br i1 %72, label %73, label %35, !dbg !283, !llvm.loop !305

; <label>:73:                                     ; preds = %35, %12
  %74 = bitcast float* %2 to %struct.kiss_fft_cpx*, !dbg !307
  tail call void @kiss_fft(%struct.kiss_fft_state* %5, %struct.kiss_fft_cpx* %22, %struct.kiss_fft_cpx* %74) #6, !dbg !308
  ret void, !dbg !309
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #5

; Function Attrs: nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #6

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind }
attributes #7 = { cold }
attributes #8 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!42, !43, !44}
!llvm.ident = !{!45}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 6.0.1 ", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !3)
!1 = !DIFile(filename: "libspatialaudio/source/kiss_fft/kiss_fftr.c", directory: "/home/yingj4/Desktop/cs598jtfa20/project/audio_pipeline")
!2 = !{}
!3 = !{!4, !5, !11, !35, !37, !39, !30, !40}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!5 = !DIDerivedType(tag: DW_TAG_typedef, name: "kiss_fftr_cfg", file: !6, line: 18, baseType: !7)
!6 = !DIFile(filename: "libspatialaudio/source/kiss_fft/kiss_fftr.h", directory: "/home/yingj4/Desktop/cs598jtfa20/project/audio_pipeline")
!7 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8, size: 64)
!8 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiss_fftr_state", file: !1, line: 18, size: 192, elements: !9)
!9 = !{!10, !34, !36}
!10 = !DIDerivedType(tag: DW_TAG_member, name: "substate", scope: !8, file: !1, line: 19, baseType: !11, size: 64)
!11 = !DIDerivedType(tag: DW_TAG_typedef, name: "kiss_fft_cfg", file: !12, line: 56, baseType: !13)
!12 = !DIFile(filename: "libspatialaudio/source/kiss_fft/kiss_fft.h", directory: "/home/yingj4/Desktop/cs598jtfa20/project/audio_pipeline")
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64)
!14 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiss_fft_state", file: !15, line: 28, size: 2176, elements: !16)
!15 = !DIFile(filename: "libspatialaudio/source/kiss_fft/_kiss_fft_guts.h", directory: "/home/yingj4/Desktop/cs598jtfa20/project/audio_pipeline")
!16 = !{!17, !19, !20, !24}
!17 = !DIDerivedType(tag: DW_TAG_member, name: "nfft", scope: !14, file: !15, line: 29, baseType: !18, size: 32)
!18 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "inverse", scope: !14, file: !15, line: 30, baseType: !18, size: 32, offset: 32)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "factors", scope: !14, file: !15, line: 31, baseType: !21, size: 2048, offset: 64)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !18, size: 2048, elements: !22)
!22 = !{!23}
!23 = !DISubrange(count: 64)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "twiddles", scope: !14, file: !15, line: 32, baseType: !25, size: 64, offset: 2112)
!25 = !DICompositeType(tag: DW_TAG_array_type, baseType: !26, size: 64, elements: !32)
!26 = !DIDerivedType(tag: DW_TAG_typedef, name: "kiss_fft_cpx", file: !12, line: 54, baseType: !27)
!27 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12, line: 51, size: 64, elements: !28)
!28 = !{!29, !31}
!29 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !27, file: !12, line: 52, baseType: !30, size: 32)
!30 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !27, file: !12, line: 53, baseType: !30, size: 32, offset: 32)
!32 = !{!33}
!33 = !DISubrange(count: 1)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "tmpbuf", scope: !8, file: !1, line: 20, baseType: !35, size: 64, offset: 64)
!35 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !26, size: 64)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "super_twiddles", scope: !8, file: !1, line: 21, baseType: !35, size: 64, offset: 128)
!37 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !38, size: 64)
!38 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!39 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!40 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !41, size: 64)
!41 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !26)
!42 = !{i32 2, !"Dwarf Version", i32 4}
!43 = !{i32 2, !"Debug Info Version", i32 3}
!44 = !{i32 1, !"wchar_size", i32 4}
!45 = !{!"clang version 6.0.1 "}
!46 = distinct !DISubprogram(name: "kiss_fftr_alloc", scope: !1, file: !1, line: 27, type: !47, isLocal: false, isDefinition: true, scopeLine: 28, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !53)
!47 = !DISubroutineType(types: !48)
!48 = !{!5, !18, !18, !4, !49}
!49 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !50, size: 64)
!50 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !51, line: 62, baseType: !52)
!51 = !DIFile(filename: "/home/yingj4/llvm-6.0/builtLLVM/lib/clang/6.0.1/include/stddef.h", directory: "/home/yingj4/Desktop/cs598jtfa20/project/audio_pipeline")
!52 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!53 = !{!54, !55, !56, !57, !58, !59, !60, !61, !62}
!54 = !DILocalVariable(name: "nfft", arg: 1, scope: !46, file: !1, line: 27, type: !18)
!55 = !DILocalVariable(name: "inverse_fft", arg: 2, scope: !46, file: !1, line: 27, type: !18)
!56 = !DILocalVariable(name: "mem", arg: 3, scope: !46, file: !1, line: 27, type: !4)
!57 = !DILocalVariable(name: "lenmem", arg: 4, scope: !46, file: !1, line: 27, type: !49)
!58 = !DILocalVariable(name: "i", scope: !46, file: !1, line: 29, type: !18)
!59 = !DILocalVariable(name: "st", scope: !46, file: !1, line: 30, type: !5)
!60 = !DILocalVariable(name: "subsize", scope: !46, file: !1, line: 31, type: !50)
!61 = !DILocalVariable(name: "memneeded", scope: !46, file: !1, line: 31, type: !50)
!62 = !DILocalVariable(name: "phase", scope: !63, file: !1, line: 58, type: !39)
!63 = distinct !DILexicalBlock(scope: !64, file: !1, line: 57, column: 34)
!64 = distinct !DILexicalBlock(scope: !65, file: !1, line: 57, column: 5)
!65 = distinct !DILexicalBlock(scope: !46, file: !1, line: 57, column: 5)
!66 = !DILocation(line: 27, column: 35, scope: !46)
!67 = !DILocation(line: 27, column: 44, scope: !46)
!68 = !DILocation(line: 27, column: 63, scope: !46)
!69 = !DILocation(line: 27, column: 76, scope: !46)
!70 = !DILocation(line: 30, column: 19, scope: !46)
!71 = !DILocation(line: 31, column: 5, scope: !46)
!72 = !DILocation(line: 33, column: 14, scope: !73)
!73 = distinct !DILexicalBlock(scope: !46, file: !1, line: 33, column: 9)
!74 = !DILocation(line: 33, column: 9, scope: !46)
!75 = !DILocation(line: 34, column: 17, scope: !76)
!76 = distinct !DILexicalBlock(scope: !73, file: !1, line: 33, column: 19)
!77 = !{!78, !78, i64 0}
!78 = !{!"any pointer", !79, i64 0}
!79 = !{!"omnipotent char", !80, i64 0}
!80 = !{!"Simple C/C++ TBAA"}
!81 = !DILocation(line: 34, column: 9, scope: !76)
!82 = !DILocation(line: 35, column: 9, scope: !76)
!83 = !DILocation(line: 37, column: 10, scope: !46)
!84 = !DILocation(line: 31, column: 12, scope: !46)
!85 = !DILocation(line: 39, column: 5, scope: !46)
!86 = !DILocation(line: 40, column: 50, scope: !46)
!87 = !{!88, !88, i64 0}
!88 = !{!"long", !79, i64 0}
!89 = !DILocation(line: 40, column: 90, scope: !46)
!90 = !DILocation(line: 40, column: 94, scope: !46)
!91 = !DILocation(line: 40, column: 83, scope: !46)
!92 = !DILocation(line: 40, column: 81, scope: !46)
!93 = !DILocation(line: 40, column: 48, scope: !46)
!94 = !DILocation(line: 40, column: 58, scope: !46)
!95 = !DILocation(line: 31, column: 21, scope: !46)
!96 = !DILocation(line: 42, column: 16, scope: !97)
!97 = distinct !DILexicalBlock(scope: !46, file: !1, line: 42, column: 9)
!98 = !DILocation(line: 42, column: 9, scope: !46)
!99 = !DILocation(line: 43, column: 30, scope: !100)
!100 = distinct !DILexicalBlock(scope: !97, file: !1, line: 42, column: 25)
!101 = !DILocation(line: 44, column: 5, scope: !100)
!102 = !DILocation(line: 45, column: 13, scope: !103)
!103 = distinct !DILexicalBlock(scope: !104, file: !1, line: 45, column: 13)
!104 = distinct !DILexicalBlock(scope: !97, file: !1, line: 44, column: 12)
!105 = !DILocation(line: 45, column: 21, scope: !103)
!106 = !DILocation(line: 47, column: 17, scope: !104)
!107 = !DILocation(line: 49, column: 10, scope: !108)
!108 = distinct !DILexicalBlock(scope: !46, file: !1, line: 49, column: 9)
!109 = !DILocation(line: 49, column: 9, scope: !46)
!110 = !DILocation(line: 52, column: 39, scope: !46)
!111 = !DILocation(line: 52, column: 18, scope: !46)
!112 = !{!113, !78, i64 0}
!113 = !{!"kiss_fftr_state", !78, i64 0, !78, i64 8, !78, i64 16}
!114 = !DILocation(line: 53, column: 60, scope: !46)
!115 = !DILocation(line: 53, column: 18, scope: !46)
!116 = !DILocation(line: 53, column: 9, scope: !46)
!117 = !DILocation(line: 53, column: 16, scope: !46)
!118 = !{!113, !78, i64 8}
!119 = !DILocation(line: 54, column: 37, scope: !46)
!120 = !DILocation(line: 54, column: 9, scope: !46)
!121 = !DILocation(line: 54, column: 24, scope: !46)
!122 = !{!113, !78, i64 16}
!123 = !DILocation(line: 55, column: 43, scope: !46)
!124 = !DILocation(line: 55, column: 5, scope: !46)
!125 = !DILocation(line: 29, column: 9, scope: !46)
!126 = !DILocation(line: 57, column: 19, scope: !64)
!127 = !DILocation(line: 57, column: 5, scope: !65)
!128 = !DILocation(line: 57, column: 25, scope: !64)
!129 = !DILocation(line: 59, column: 60, scope: !63)
!130 = !DILocation(line: 59, column: 49, scope: !63)
!131 = !DILocation(line: 59, column: 64, scope: !63)
!132 = !DILocation(line: 59, column: 71, scope: !63)
!133 = !DILocation(line: 59, column: 46, scope: !63)
!134 = !DILocation(line: 58, column: 16, scope: !63)
!135 = !DILocation(line: 61, column: 19, scope: !136)
!136 = distinct !DILexicalBlock(scope: !63, file: !1, line: 60, column: 13)
!137 = !DILocation(line: 60, column: 13, scope: !63)
!138 = !DILocation(line: 62, column: 9, scope: !139)
!139 = distinct !DILexicalBlock(scope: !63, file: !1, line: 62, column: 9)
!140 = !{!141, !142, i64 0}
!141 = !{!"", !142, i64 0, !142, i64 4}
!142 = !{!"float", !79, i64 0}
!143 = !{!141, !142, i64 4}
!144 = distinct !{!144, !127, !145}
!145 = !DILocation(line: 63, column: 5, scope: !65)
!146 = !DILocation(line: 65, column: 1, scope: !46)
!147 = distinct !DISubprogram(name: "kiss_fftr", scope: !1, file: !1, line: 67, type: !148, isLocal: false, isDefinition: true, scopeLine: 68, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !152)
!148 = !DISubroutineType(types: !149)
!149 = !{null, !5, !150, !35}
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 64)
!151 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !30)
!152 = !{!153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163}
!153 = !DILocalVariable(name: "st", arg: 1, scope: !147, file: !1, line: 67, type: !5)
!154 = !DILocalVariable(name: "timedata", arg: 2, scope: !147, file: !1, line: 67, type: !150)
!155 = !DILocalVariable(name: "freqdata", arg: 3, scope: !147, file: !1, line: 67, type: !35)
!156 = !DILocalVariable(name: "k", scope: !147, file: !1, line: 70, type: !18)
!157 = !DILocalVariable(name: "ncfft", scope: !147, file: !1, line: 70, type: !18)
!158 = !DILocalVariable(name: "fpnk", scope: !147, file: !1, line: 71, type: !26)
!159 = !DILocalVariable(name: "fpk", scope: !147, file: !1, line: 71, type: !26)
!160 = !DILocalVariable(name: "f1k", scope: !147, file: !1, line: 71, type: !26)
!161 = !DILocalVariable(name: "f2k", scope: !147, file: !1, line: 71, type: !26)
!162 = !DILocalVariable(name: "tw", scope: !147, file: !1, line: 71, type: !26)
!163 = !DILocalVariable(name: "tdc", scope: !147, file: !1, line: 71, type: !26)
!164 = !DILocation(line: 67, column: 30, scope: !147)
!165 = !DILocation(line: 67, column: 56, scope: !147)
!166 = !DILocation(line: 67, column: 79, scope: !147)
!167 = !DILocation(line: 73, column: 14, scope: !168)
!168 = distinct !DILexicalBlock(scope: !147, file: !1, line: 73, column: 10)
!169 = !DILocation(line: 73, column: 24, scope: !168)
!170 = !{!171, !172, i64 4}
!171 = !{!"kiss_fft_state", !172, i64 0, !172, i64 4, !79, i64 8, !79, i64 264}
!172 = !{!"int", !79, i64 0}
!173 = !DILocation(line: 73, column: 10, scope: !168)
!174 = !DILocation(line: 73, column: 10, scope: !147)
!175 = !DILocation(line: 74, column: 17, scope: !176)
!176 = distinct !DILexicalBlock(scope: !168, file: !1, line: 73, column: 33)
!177 = !DILocation(line: 74, column: 9, scope: !176)
!178 = !DILocation(line: 75, column: 9, scope: !176)
!179 = !DILocation(line: 78, column: 27, scope: !147)
!180 = !{!171, !172, i64 0}
!181 = !DILocation(line: 70, column: 11, scope: !147)
!182 = !DILocation(line: 81, column: 30, scope: !147)
!183 = !DILocation(line: 81, column: 65, scope: !147)
!184 = !DILocation(line: 81, column: 5, scope: !147)
!185 = !DILocation(line: 92, column: 17, scope: !147)
!186 = !DILocation(line: 92, column: 27, scope: !147)
!187 = !DILocation(line: 71, column: 38, scope: !147)
!188 = !DILocation(line: 93, column: 27, scope: !147)
!189 = !DILocation(line: 97, column: 27, scope: !147)
!190 = !DILocation(line: 97, column: 17, scope: !147)
!191 = !DILocation(line: 97, column: 19, scope: !147)
!192 = !DILocation(line: 98, column: 31, scope: !147)
!193 = !DILocation(line: 98, column: 5, scope: !147)
!194 = !DILocation(line: 98, column: 21, scope: !147)
!195 = !DILocation(line: 98, column: 23, scope: !147)
!196 = !DILocation(line: 102, column: 37, scope: !147)
!197 = !DILocation(line: 102, column: 39, scope: !147)
!198 = !DILocation(line: 102, column: 21, scope: !147)
!199 = !DILocation(line: 102, column: 23, scope: !147)
!200 = !DILocation(line: 70, column: 9, scope: !147)
!201 = !DILocation(line: 105, column: 17, scope: !202)
!202 = distinct !DILexicalBlock(scope: !203, file: !1, line: 105, column: 5)
!203 = distinct !DILexicalBlock(scope: !147, file: !1, line: 105, column: 5)
!204 = !DILocation(line: 105, column: 5, scope: !203)
!205 = !DILocation(line: 106, column: 18, scope: !206)
!206 = distinct !DILexicalBlock(scope: !202, file: !1, line: 105, column: 36)
!207 = !DILocation(line: 71, column: 23, scope: !147)
!208 = !DILocation(line: 107, column: 36, scope: !206)
!209 = !DILocation(line: 107, column: 40, scope: !206)
!210 = !DILocation(line: 71, column: 18, scope: !147)
!211 = !DILocation(line: 108, column: 40, scope: !206)
!212 = !DILocation(line: 112, column: 9, scope: !213)
!213 = distinct !DILexicalBlock(scope: !206, file: !1, line: 112, column: 9)
!214 = !DILocation(line: 71, column: 27, scope: !147)
!215 = !DILocation(line: 113, column: 9, scope: !216)
!216 = distinct !DILexicalBlock(scope: !206, file: !1, line: 113, column: 9)
!217 = !DILocation(line: 71, column: 31, scope: !147)
!218 = !DILocation(line: 114, column: 9, scope: !219)
!219 = distinct !DILexicalBlock(scope: !206, file: !1, line: 114, column: 9)
!220 = !DILocation(line: 71, column: 35, scope: !147)
!221 = !DILocation(line: 116, column: 25, scope: !206)
!222 = !DILocation(line: 116, column: 21, scope: !206)
!223 = !DILocation(line: 116, column: 23, scope: !206)
!224 = !DILocation(line: 117, column: 25, scope: !206)
!225 = !DILocation(line: 117, column: 21, scope: !206)
!226 = !DILocation(line: 117, column: 23, scope: !206)
!227 = !DILocation(line: 118, column: 31, scope: !206)
!228 = !DILocation(line: 118, column: 27, scope: !206)
!229 = !DILocation(line: 118, column: 29, scope: !206)
!230 = !DILocation(line: 119, column: 31, scope: !206)
!231 = !DILocation(line: 119, column: 27, scope: !206)
!232 = !DILocation(line: 119, column: 29, scope: !206)
!233 = !DILocation(line: 105, column: 30, scope: !202)
!234 = distinct !{!234, !204, !235}
!235 = !DILocation(line: 120, column: 5, scope: !203)
!236 = !DILocation(line: 121, column: 1, scope: !147)
!237 = distinct !DISubprogram(name: "kiss_fftri", scope: !1, file: !1, line: 123, type: !238, isLocal: false, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !241)
!238 = !DISubroutineType(types: !239)
!239 = !{null, !5, !40, !240}
!240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !30, size: 64)
!241 = !{!242, !243, !244, !245, !246, !247, !251, !252, !253, !254}
!242 = !DILocalVariable(name: "st", arg: 1, scope: !237, file: !1, line: 123, type: !5)
!243 = !DILocalVariable(name: "freqdata", arg: 2, scope: !237, file: !1, line: 123, type: !40)
!244 = !DILocalVariable(name: "timedata", arg: 3, scope: !237, file: !1, line: 123, type: !240)
!245 = !DILocalVariable(name: "k", scope: !237, file: !1, line: 126, type: !18)
!246 = !DILocalVariable(name: "ncfft", scope: !237, file: !1, line: 126, type: !18)
!247 = !DILocalVariable(name: "fk", scope: !248, file: !1, line: 140, type: !26)
!248 = distinct !DILexicalBlock(scope: !249, file: !1, line: 139, column: 38)
!249 = distinct !DILexicalBlock(scope: !250, file: !1, line: 139, column: 5)
!250 = distinct !DILexicalBlock(scope: !237, file: !1, line: 139, column: 5)
!251 = !DILocalVariable(name: "fnkc", scope: !248, file: !1, line: 140, type: !26)
!252 = !DILocalVariable(name: "fek", scope: !248, file: !1, line: 140, type: !26)
!253 = !DILocalVariable(name: "fok", scope: !248, file: !1, line: 140, type: !26)
!254 = !DILocalVariable(name: "tmp", scope: !248, file: !1, line: 140, type: !26)
!255 = !DILocation(line: 123, column: 31, scope: !237)
!256 = !DILocation(line: 123, column: 54, scope: !237)
!257 = !DILocation(line: 123, column: 80, scope: !237)
!258 = !DILocation(line: 128, column: 13, scope: !259)
!259 = distinct !DILexicalBlock(scope: !237, file: !1, line: 128, column: 9)
!260 = !DILocation(line: 128, column: 23, scope: !259)
!261 = !DILocation(line: 128, column: 31, scope: !259)
!262 = !DILocation(line: 128, column: 9, scope: !237)
!263 = !DILocation(line: 129, column: 18, scope: !264)
!264 = distinct !DILexicalBlock(scope: !259, file: !1, line: 128, column: 37)
!265 = !DILocation(line: 129, column: 9, scope: !264)
!266 = !DILocation(line: 130, column: 9, scope: !264)
!267 = !DILocation(line: 133, column: 27, scope: !237)
!268 = !DILocation(line: 126, column: 12, scope: !237)
!269 = !DILocation(line: 135, column: 35, scope: !237)
!270 = !DILocation(line: 135, column: 39, scope: !237)
!271 = !DILocation(line: 135, column: 55, scope: !237)
!272 = !DILocation(line: 135, column: 37, scope: !237)
!273 = !DILocation(line: 135, column: 9, scope: !237)
!274 = !DILocation(line: 135, column: 19, scope: !237)
!275 = !DILocation(line: 135, column: 21, scope: !237)
!276 = !DILocation(line: 136, column: 35, scope: !237)
!277 = !DILocation(line: 136, column: 55, scope: !237)
!278 = !DILocation(line: 136, column: 37, scope: !237)
!279 = !DILocation(line: 136, column: 19, scope: !237)
!280 = !DILocation(line: 136, column: 21, scope: !237)
!281 = !DILocation(line: 126, column: 9, scope: !237)
!282 = !DILocation(line: 139, column: 19, scope: !249)
!283 = !DILocation(line: 139, column: 5, scope: !250)
!284 = !DILocation(line: 141, column: 14, scope: !248)
!285 = !DILocation(line: 140, column: 22, scope: !248)
!286 = !DILocation(line: 142, column: 33, scope: !248)
!287 = !DILocation(line: 142, column: 38, scope: !248)
!288 = !DILocation(line: 140, column: 26, scope: !248)
!289 = !DILocation(line: 143, column: 39, scope: !248)
!290 = !DILocation(line: 147, column: 9, scope: !291)
!291 = distinct !DILexicalBlock(scope: !248, file: !1, line: 147, column: 9)
!292 = !DILocation(line: 140, column: 32, scope: !248)
!293 = !DILocation(line: 148, column: 9, scope: !294)
!294 = distinct !DILexicalBlock(scope: !248, file: !1, line: 148, column: 9)
!295 = !DILocation(line: 140, column: 42, scope: !248)
!296 = !DILocation(line: 149, column: 9, scope: !297)
!297 = distinct !DILexicalBlock(scope: !248, file: !1, line: 149, column: 9)
!298 = !DILocation(line: 140, column: 37, scope: !248)
!299 = !DILocation(line: 150, column: 9, scope: !300)
!300 = distinct !DILexicalBlock(scope: !248, file: !1, line: 150, column: 9)
!301 = !DILocation(line: 151, column: 9, scope: !302)
!302 = distinct !DILexicalBlock(scope: !248, file: !1, line: 151, column: 9)
!303 = !DILocation(line: 155, column: 33, scope: !248)
!304 = !DILocation(line: 139, column: 33, scope: !249)
!305 = distinct !{!305, !283, !306}
!306 = !DILocation(line: 157, column: 5, scope: !250)
!307 = !DILocation(line: 158, column: 41, scope: !237)
!308 = !DILocation(line: 158, column: 5, scope: !237)
!309 = !DILocation(line: 159, column: 1, scope: !237)
